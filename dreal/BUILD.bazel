load("//third_party/com_github_robotlocomotion_drake:tools/workspace/cpplint.bzl", "cpplint")
load("//third_party/com_github_robotlocomotion_drake:tools/workspace/python_lint.bzl", "python_lint")
load(
    "//tools:dreal.bzl",
    "DREAL_VERSION",
    "dreal_cc_binary",
    "dreal_cc_library",
)
load("@rules_pkg//:pkg.bzl", "pkg_tar")

package(default_visibility = ["//visibility:private"])

genrule(
    name = "generate_version_header",
    outs = [
        "version.h",
    ],
    cmd = "$(location //tools:generate_version_header) %s > $@" % DREAL_VERSION,
    stamp = True,
    tools = [
        "//tools:generate_version_header",
    ],
)

dreal_cc_library(
    name = "version_header",
    hdrs = [
        "version.h",
    ],
    visibility = [":__subpackages__"],
)

dreal_cc_library(
    name = "qsopt-ex",
    srcs = [
        "qsopt_ex.cc",
    ],
    hdrs = [
        "qsopt_ex.h",
    ],
    visibility = [
        "//visibility:public",
    ],
    deps = [
        "//:qsopt-ex",
        "@linux_libs//:gmpxx",
    ],
)

dreal_cc_library(
    name = "soplex",
    hdrs = [
        "soplex.h",
    ],
    visibility = [
        "//visibility:public",
    ],
    deps = [
        "//:soplex",
        "@linux_libs//:gmpxx",
    ],
)

dreal_cc_library(
    name = "gmp",
    srcs = [
        "gmp.cc",
    ],
    hdrs = [
        "gmp.h",
    ],
    visibility = [
        "//visibility:public",
    ],
    deps = [
        "@fmt",
        "@linux_libs//:gmpxx",
    ],
)

dreal_cc_library(
    name = "main_program",
    srcs = [
        "main_program.cc",
        "main_program.h",
    ],
    copts = [
        "-frounding-math",
        "-Wno-unknown-pragmas",
    ],
    linkopts = [
        "-Wl,--enable-new-dtags",
        "-Wl,-rpath='$$ORIGIN/../lib'",
    ],
    local_defines = select({
        "//:soplex-enabled": ["HAVE_SOPLEX=1"],
        "//conditions:default": ["HAVE_SOPLEX=0"],
    }),
    visibility = [
        "//benchmark:__subpackages__",
        "//dreal/test/smt2:__subpackages__",
    ],
    deps = [
        "//dreal:qsopt-ex",
        "//dreal/smt2",
        "//dreal/solver:config",
        "//dreal/util:filesystem",
        "//dreal/util:infty",
        "//dreal/util:logging",
        "//dreal/util:rounding_mode_guard",
        "@ezoptionparser",
        "@fmt",
    ] + select({
        "//:soplex-enabled": ["//dreal:soplex"],
        "//conditions:default": [],
    }),
)

dreal_cc_binary(
    name = "dreal",
    srcs = [
        "dreal_main.cc",
    ],
    linkstatic = 1,
    visibility = [
        "//dreal/test/smt2:__subpackages__",
    ],
    deps = [
        "//dreal:main_program",
    ],
)

# ----------------------
# Header files to expose
# ----------------------
filegroup(
    name = "headers",
    srcs = [
        "dreal.h",
        "gmp.h",
        "qsopt_ex.h",
        "version.h",
    ],
    visibility = ["//visibility:public"],
)

pkg_tar(
    name = "package_headers",
    srcs = [
        ":headers",
    ],
    extension = "tar.gz",
    package_dir = "include/dreal",
    tags = ["manual"],
    visibility = ["//:__pkg__"],
)

pkg_tar(
    name = "package_bin",
    srcs = [
        ":dreal",
    ],
    extension = "tar.gz",
    mode = "0755",
    package_dir = "bin",
    tags = ["manual"],
    visibility = ["//:__pkg__"],
)

pkg_tar(
    name = "package_sharedlib",
    srcs = [
        "//:libdreal.so",
    ],
    extension = "tar.gz",
    package_dir = "lib",
    tags = ["manual"],
    visibility = ["//:__pkg__"],
)

cpplint()

python_lint()

licenses(["notice"])  # Apache 2.0

exports_files(["LICENSE"])
